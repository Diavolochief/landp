{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\erick\\\\Desktop\\\\re\\\\landp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\erick\\\\Desktop\\\\re\\\\landp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2;\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\nimport PropTypes from \"prop-types\";\nvar ToggleWrapper = styled.span(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  display: flex;\\n  height: \", \"px;\\n  position: relative;\\n  width: \", \"px;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-around;\\n\"])), function (props) {\n  return props.size / 2;\n}, function (props) {\n  return props.size / 2;\n});\nvar Line = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  height: \", \"px;\\n  width: \", \"px;\\n  border: white;\\n  border-radius: \", \"px;\\n  background-color: \", \";\\n\"])), function (props) {\n  return props.size * 0.05;\n}, function (props) {\n  return props.size * 0.5;\n}, function (props) {\n  return props.size * 0.05;\n}, function (props) {\n  return props.color;\n});\nvar Line1 = posed(Line)({\n  open: {\n    y: function y(props) {\n      return props.size / 6;\n    },\n    rotate: 45\n  },\n  closed: {\n    y: 0,\n    rotate: 0\n  }\n});\nvar Line2 = posed(Line)({\n  open: {\n    rotate: 0,\n    width: 0\n  },\n  closed: {\n    width: function width(props) {\n      return props.size * 0.5;\n    },\n    rotate: 0\n  }\n});\nvar Line3 = posed(Line)({\n  open: {\n    y: function y(props) {\n      return -props.size / 6;\n    },\n    rotate: -45\n  },\n  closed: {\n    y: 0,\n    rotate: 0\n  }\n});\n\nvar MenuToggle = function MenuToggle(_ref) {\n  var size = _ref.size,\n      color = _ref.color;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(ToggleWrapper, {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    size: size\n  }, /*#__PURE__*/React.createElement(Line1, {\n    pose: open ? \"open\" : \"closed\",\n    size: size,\n    color: color\n  }), /*#__PURE__*/React.createElement(Line2, {\n    pose: open ? \"open\" : \"closed\",\n    size: size,\n    color: color\n  }), /*#__PURE__*/React.createElement(Line3, {\n    pose: open ? \"open\" : \"closed\",\n    size: size,\n    color: color\n  }));\n};\n\nMenuToggle.defaultProps = {\n  size: 60,\n  color: \"white\"\n};\nMenuToggle.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n};\nexport default MenuToggle;","map":null,"metadata":{},"sourceType":"module"}
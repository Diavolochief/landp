{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\erick\\\\Desktop\\\\re\\\\landp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\erick\\\\Desktop\\\\re\\\\landp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @param {number} size             the size  of the buttons.\n * @param {boolean} top             specify if the button should be on the top if false the\n * button will be at the bottom.\n * @param {boolean} right           specify if the button should be on the right if false the\n * button will be at the left.\n * @param {string} color            the backgroundColor for the main button\n * @children should be an Item component with params :\n *  @param {string} imgSrc          the icon to use on given button\n *  @param {function} onClick       the callback function call onClick\n *  @param {string} backgroundColor            the backgroundColor for the Item\n */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Container, Floating, Item } from \"./styles\";\nimport { PoseGroup } from \"react-pose\";\nimport PropTypes from \"prop-types\";\nimport MenuToggle from \"./hamburger\";\nimport contac from \"../../../src/iconos/contacts.svg\";\nvar rotations = {\n  \"3\": [[3 * Math.PI / 2, Math.PI], [0, Math.PI / 2]],\n  \"6\": [[Math.PI, Math.PI], [0, 0]]\n};\n\nfunction FloatingButton(_ref) {\n  var backgroundColor = _ref.backgroundColor,\n      color = _ref.color,\n      size = _ref.size,\n      top = _ref.top,\n      right = _ref.right,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var ref = useRef(null);\n  var number = React.Children.count(children);\n  useEffect(function () {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return function () {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  });\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setExpanded(false);\n    }\n  };\n\n  function getAngle(i) {\n    var angle = number <= 3 ? Math.PI / 2 : number <= 6 ? Math.PI : 2 * Math.PI;\n    var rotate = rotations[number <= 3 ? \"3\" : \"6\"][Number(top)][Number(right)];\n    return {\n      angle: rotate + (number <= 6 ? i * angle / (number - 1) : i * angle / number),\n      distance: number <= 6 ? size / Math.sin(angle / (number - 1)) + size / 2 : size / Math.sin(angle / number) + size / 2\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Floating, {\n    onClick: function onClick() {\n      setExpanded(!expanded);\n    },\n    top: top,\n    right: right,\n    pose: expanded ? \"open\" : \"closed\",\n    number: number,\n    distance: getAngle(0).distance,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Container, {\n    size: size,\n    style: {\n      backgroundColor: \"\".concat(backgroundColor || \"none\")\n    }\n  }, /*#__PURE__*/React.createElement(contac, {\n    expanded: expanded,\n    color: color,\n    size: size\n  })), /*#__PURE__*/React.createElement(PoseGroup, null, number === 1 ? /*#__PURE__*/React.createElement(Item, {\n    key: 0,\n    i: getAngle(0).angle,\n    size: size,\n    distance: getAngle(0).distance,\n    style: {\n      backgroundColor: children.props.backgroundColor\n    },\n    onClick: function onClick() {\n      return children.props.onClick();\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: children.props.imgSrc,\n    style: {\n      height: size / 2,\n      width: size / 2,\n      fill: \"white\"\n    },\n    alt: \"icon\"\n  })) : expanded && _toConsumableArray(Array(number)).map(function (x, i) {\n    return /*#__PURE__*/React.createElement(Item, {\n      key: i,\n      i: getAngle(i).angle,\n      size: size,\n      distance: getAngle(i).distance,\n      style: {\n        backgroundColor: children[i].props.backgroundColor\n      },\n      onClick: function onClick() {\n        return children[i].props.onClick();\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: children[i].props.imgSrc,\n      style: {\n        height: size / 2,\n        width: size / 2\n      },\n      alt: \"icon-\".concat(i)\n    }));\n  })));\n}\n\nFloatingButton.defaultProps = {\n  color: \"#dbdbdb\",\n  backgroundColor: \"#8f1d30\",\n  size: 60,\n  top: false,\n  right: true,\n  children: {}\n};\nFloatingButton.propTypes = {\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  size: PropTypes.number,\n  top: PropTypes.bool,\n  right: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object])\n};\nexport default FloatingButton;\nexport { FloatingButton };\nexport { Item };","map":null,"metadata":{},"sourceType":"module"}
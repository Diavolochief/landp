{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux'; // middlewares\n\nimport thunkMiddleware from 'redux-thunk'; // Import custom components\n\nimport rootReducer from '../reducers';\n\nfunction saveToLocalStorage(state) {\n  try {\n    var serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    var serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nvar persistedState = loadFromLocalStorage();\n/**\r\n * Create a Redux store that holds the app state.\r\n */\n\nvar store = createStore(rootReducer, persistedState, compose(applyMiddleware(thunkMiddleware), //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\nwindow.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n}));\nstore.subscribe(function () {\n  var state = store.getState();\n  saveToLocalStorage(state);\n});\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","compose","thunkMiddleware","rootReducer","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","subscribe","getState"],"sources":["C:/Users/erick/Desktop/uwu/theme/src/store/index.js"],"sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\r\n\r\n// middlewares\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n// Import custom components\r\nimport rootReducer from '../reducers';\r\n\r\n\r\nfunction saveToLocalStorage(state) {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if (serializedState === null) return undefined\r\n        return JSON.parse(serializedState)\r\n    } catch (e) {\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\n/**\r\n * Create a Redux store that holds the app state.\r\n */\r\nconst store = createStore(rootReducer, persistedState, compose(\r\n    applyMiddleware(thunkMiddleware),\r\n\r\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\r\n        return f;\r\n    }\r\n));\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    saveToLocalStorage(state);\r\n});\r\n\r\nexport default store;"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,IAAI;IACA,IAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;IACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;EACH,CAHD,CAGE,OAAOK,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH;AACJ;;AAED,SAASG,oBAAT,GAAgC;EAC5B,IAAI;IACA,IAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;IACA,IAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;IAC9B,OAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;EACH,CAJD,CAIE,OAAOK,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACA,OAAOK,SAAP;EACH;AACJ;;AAED,IAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA;AACA;AACA;;AACA,IAAMK,KAAK,GAAGpB,WAAW,CAACI,WAAD,EAAce,cAAd,EAA8BjB,OAAO,CAC1DD,eAAe,CAACE,eAAD,CAD2C,EAG1D;AACAkB,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA8E,UAAUC,CAAV,EAAa;EACvF,OAAOA,CAAP;AACH,CANyD,CAArC,CAAzB;AASAH,KAAK,CAACI,SAAN,CAAgB,YAAM;EAClB,IAAMlB,KAAK,GAAGc,KAAK,CAACK,QAAN,EAAd;EACApB,kBAAkB,CAACC,KAAD,CAAlB;AACH,CAHD;AAKA,eAAec,KAAf"},"metadata":{},"sourceType":"module"}
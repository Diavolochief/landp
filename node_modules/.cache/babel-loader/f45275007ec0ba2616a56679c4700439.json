{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `ChipDirective` directive represent a chip of the React ChipList.\n * ```html\n * <ChipListComponent>\n *   <ChipsDirective>\n *    <ChipDirective text='chip1'></ChipDirective>\n *    <ChipDirective text='chip2'></ChipDirective>\n *   </ChipsDirective>\n * </ChipListComponent>\n * ```\n */\n\nvar ChipDirective =\n/** @class */\nfunction (_super) {\n  __extends(ChipDirective, _super);\n\n  function ChipDirective() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChipDirective.moduleName = 'chip';\n  return ChipDirective;\n}(ComplexBase);\n\nexport { ChipDirective };\n\nvar ChipsDirective =\n/** @class */\nfunction (_super) {\n  __extends(ChipsDirective, _super);\n\n  function ChipsDirective() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChipsDirective.propertyName = 'chips';\n  ChipsDirective.moduleName = 'chips';\n  return ChipsDirective;\n}(ComplexBase);\n\nexport { ChipsDirective };","map":null,"metadata":{},"sourceType":"module"}